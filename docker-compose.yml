version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: studymentor-db
    environment:
      POSTGRES_DB: studymentor
      POSTGRES_USER: studymentor
      POSTGRES_PASSWORD: studymentor123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U studymentor -d studymentor"]
      interval: 10s
      timeout: 5s
      retries: 5

  # StudyMentor Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: studymentor-app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://studymentor:studymentor123@postgres:5432/studymentor
      - SESSION_SECRET=your-super-secret-session-key-min-32-chars-change-this
      - COOKIE_SECRET=your-cookie-secret-min-32-chars-change-this
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CANVAS_CLIENT_ID=${CANVAS_CLIENT_ID}
      - CANVAS_CLIENT_SECRET=${CANVAS_CLIENT_SECRET}
      - CANVAS_REDIRECT_URI=http://localhost:3000/api/canvas/callback
      - PORT=3000
      - RATE_LIMIT_MAX_REQUESTS=100
      - SENSITIVE_OPERATION_LIMIT=10
      - OPENAI_REQUEST_LIMIT=50
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
      - LOG_LEVEL=info
      - ENABLE_REQUEST_LOGGING=true
      - ENABLE_DEBUG_MODE=false
      - ENABLE_VERBOSE_LOGGING=false
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - uploads_data:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local 